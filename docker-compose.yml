version: "3.9"
services:
  mysql:
    image: mysql:5.7
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=12345
      - MYSQL_DATABASE=ts-sequelize-mysql-demo
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-p12345"]
      timeout: 20s
      retries: 10
    networks:
      - db_net
  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"
    networks:
      - redis_net
  backend:
    # restart: on-failure
    ###  dev mode доорхийг идэвхжүүлнэ үү  ###
    # command: tail -f /dev/null
    # volumes:
    #   - ./web/:/app
    ###  dev mode дээрхийг идэвхжүүлнэ үү  ###
    build:
      context: ./ts-sequelize-mysql-demo
      dockerfile: ./Dockerfile
    ports:
      - "8001:8001"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - redis_net
      - db_net
  front_1:
    build:
      context: ./pages-dir-codebase
      dockerfile: ./Dockerfile
      target: runner
    environment:
      NEXT_TELEMETRY_DISABLED: 1
      REDIS_HOST: redis
      REDIS_PORT: 6379
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      MYSQL_USER: root
      MYSQL_PASSWORD: 12345
      MYSQL_DATABASE: ts-sequelize-mysql-demo
    ports:
      - "3000:3000"
    depends_on:
      mysql:
        condition: service_healthy

  front_2:
    build:
      context: ./app-dir-codebase
      dockerfile: ./Dockerfile
      target: runner2
    environment:
      NEXT_TELEMETRY_DISABLED: 1
      REDIS_HOST: redis
      REDIS_PORT: 6379
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      MYSQL_USER: root
      MYSQL_PASSWORD: 12345
      MYSQL_DATABASE: ts-sequelize-mysql-demo
    ports:
      - "3001:3000"
    depends_on:
      mysql:
        condition: service_healthy

  # nginx:
  #   restart: on-failure
  #   image: nginx:latest
  #   ports:
  #     - "8443:443"
  #     - "8000:80"
  #   volume:
  #     - ./nginx/config.conf:/etc/nginx/default.conf

networks:
  redis_net:
    external: false
  db_net:
    external: false
